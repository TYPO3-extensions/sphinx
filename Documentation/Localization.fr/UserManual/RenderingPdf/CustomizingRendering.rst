.. ==================================================
.. FOR YOUR INFORMATION
.. --------------------------------------------------
.. -*- coding: utf-8 -*- with BOM.

.. include:: ../../../Includes.txt


Personnalisation du rendu
"""""""""""""""""""""""""

Afin de personnaliser le rendu d'une documentation générée en PDF avec LaTeX pour correspondre au design TYPO3, nous
devons d'abord installer la `famille de fontes corporate Share`_ et la convertir pour être compatible avec LaTeX. Veuillez
consulter le chapitre :ref:`installing_share_font` pour plus d'informations.

.. Liens :
.. _`famille de fontes corporate Share`: http://typo3.org/the-brand/style-guide/the-typo3-font/


Modèle LaTeX
~~~~~~~~~~~~

Le modèle LaTeX est défini dans le fichier ``conf.py`` :

.. code-block:: python

	# Grouping the document tree into LaTeX files. List of tuples
	# (source start file, target name, title, author, documentclass [howto/manual]).
	latex_documents = [
	    ('Index', 'myext.tex', u'Ma documentation d\'extension',
	     u'Xavier Perseguers', 'manual'),
	]

Dans cet exemple, la classe de documents dans ``conf.py`` est ``manual`` (le dernier tuple de ``latex_documents``). Ce
qui signifie qu'après que Sphinx a automatiquement ajouté le préfixe ``sphinx`` durant la phase de compilation, la classe
de document finale telle que vue par LaTeX est ``sphinxmanual`` :

.. code-block:: latex
	:linenos:

	% Generated by Sphinx.
	\def\sphinxdocclass{report}
	\documentclass[a4paper,10pt,english]{sphinxmanual}
	\usepackage[utf8]{inputenc}
	\DeclareUnicodeCharacter{00A0}{\nobreakspace}
	\usepackage{cmap}
	\usepackage[T1]{fontenc}
	\usepackage{babel}
	\usepackage{times}
	\usepackage[Bjarne]{fncychap}
	\usepackage{longtable}
	\usepackage{sphinx}
	\usepackage{multirow}

	\title{Ma documentation d'extension}
	\date{2013-06-30 22:25}
	\release{1.0.0}
	\author{Xavier Perseguers}

Sphinx fournit deux classes de documents :

- ``manual`` c'est-à-dire ``sphinxmanual``, qui étend la classe de base de documents LaTeX ``report`` (par défaut en mode
  recto-verso avec une page de titre séparée) ;

- ``howto`` c'est-à-dire ``sphinxhowto``, qui étend la classe de base de documents LaTeX ``article`` (par défaut recto
  uniquement).

Les deux fichiers de classes (``sphinxmanual.cls`` et ``sphinxhowto.cls``) sont copiés dans le répertoire ``build/latex/``
au moment du rendu.

Après avoir joué avec les différentes options pour personnaliser le rendu, le résultat est que la création d'une classe
de documents personnalisée n'est pas la meilleure option parce que la plupart des paramètres sont ensuite surchargés par
le paquet ``sphinx`` à la ligne 12 du code ci-dessus. Ce paquet (fichier ``sphinx.sty``) est également copié dans le
répertoire ``build/latex/``.

Préambule LaTeX
~~~~~~~~~~~~~~~

Des commandes supplémentaires peuvent être ajoutées au préambule du fichier LaTeX généré. C'est facilement réalisé en
modifiant le fichier ``conf.py`` :

.. code-block:: python

	f = open('latex-styling.tex', 'r+');
	PREAMBLE = f.read();

	latex_elements = {
	    # The paper size ('letterpaper' or 'a4paper').
	    #'papersize': 'a4paper',

	    # The font size ('10pt', '11pt' or '12pt').
	    #'pointsize': '10pt',

	    # Additional stuff for the LaTeX preamble.
	    'preamble': PREAMBLE
	}

Ce qui a pour effet d'injecter le contenu du fichier``latex-styling.tex`` (dans le même répertoire que ``conf.py``) dans
le document LaTeX généré. Par exemple, si ``latex-styling.tex`` contient :

.. code-block:: latex

	% Ma commande personnelle de mise en "gras"
	\newcommand{\mycommand}[1]{\textbf{#1}}

le document LaTeX généré devient :

.. code-block:: latex

	% Generated by Sphinx.
	\def\sphinxdocclass{report}
	\documentclass[a4paper,10pt,english]{sphinxmanual}
	% snip (packages)
	% Ma commande personnelle de mise en "gras"
	\newcommand{\mycommand}[1]{\textbf{#1}}

	\title{My Extension Documentation}
	\date{2013-06-30 22:25}
	\release{1.0.0}
	\author{Xavier Perseguers}

Autres options
~~~~~~~~~~~~~~

Le fichier de configuration ``conf.py`` vous permet d'effectuer d'autres réglages avec LaTeX. Veuillez consulter
http://sphinx-doc.org/config.html#options-for-latex-output pour plus d'informations.

Modèle TYPO3
~~~~~~~~~~~~

Nous voulons rester aussi proche que possible du rendu par défaut, pour éviter de devoir modifier le code de génération
LaTeX de Sphinx. C'est pourquoi nous choisissons d'inclure un paquet personnalisé ``typo3`` (fichier ``typo3.sty``) qui
surcharge certains paramètres du paquet ``sphinx``. Afin de l'inclure automatiquement, nous utilisons naturellement
l'option ``preamble`` de ``conf.py`` :

.. code-block:: python

	latex_elements = {
	    # Additional stuff for the LaTeX preamble.
	    'preamble': '\\usepackage{typo3}'
	}

Le paquet ``typo3`` est disponible dans le dépôt RestTools, dans le répertoire ``RestTools/LaTeX/`` et est automatiquement
copié dans le répertoire de rendu lorsque vous utilisez cette extension. Sinon, vous pouvez choisir de le référencer
dans ``TEXMF`` si vous envisagez de générer des PDF depuis la ligne de commande uniquement.
