.. ==================================================
.. FOR YOUR INFORMATION
.. --------------------------------------------------
.. -*- coding: utf-8 -*- with BOM.

.. include:: ../../Includes.txt
.. include:: Images.txt


Customizing the rendering
"""""""""""""""""""""""""

In order to customize the output of documentation rendered as PDF with LaTeX to match the TYPO3 branding, we first
need to install the `Share corporate font family`_ and convert it to be compatible with LaTeX. Instructions can be
found in the repository of the TYPO3-related commands for Sphinx, within directory ``LaTeX``.

Instead of just fetching this ``LaTeX`` directory from the official repository, we suggest to replace the whole
``RestTools`` directory and use a clone of the whole git repository:

.. code-block:: bash

	$ cd /path/to/typo3conf/ext/sphinx/Resources/Private/sphinx-sources/
	$ sudo rm -rf RestTools
	$ git clone git://git.typo3.org/Documentation/RestTools.git

Then go to directory ``RestTools/LaTeX`` and convert the Share font (the password that is being asked is related to ``sudo``; as such it is your own password):

.. code-block:: bash

	$ cd /path/to/typo3conf/ext/sphinx/Resources/Private/sphinx-sources/RestTools/LaTeX/
	$ cd font/
	$ ./convert-share.sh

.. tip::

	The complete Share font family can be downloaded off http://prdownloads.sourceforge.net/typo3/TYPO3_Share_Complete.zip?download.

.. note::

	**MS Windows Users:** As there is currently no automatic script available for you, when using MikTeX, please follow the instructions from http://www.radamir.com/tex/ttf-tex.htm.

	**Tip:** You may want to use script ``convert-share.sh`` from a Linux machine and set ``INSTALL=0`` near the beginning of the script. Instead of installing the converted fonts on your system, it will only convert them and prepare mapping files within directory ``RestTools/LaTeX/fonts/texmf/``.

Once converted, the font is available as ``typo3share`` within LaTeX documents. To test that it has been properly installed, you may create a sample LaTeX document, (``test-font.tex``):

.. code-block:: latex

	\documentclass{article}

	\RequirePackage[utf8]{inputenc}
	\RequirePackage[T1]{fontenc}

	%% TYPO3 font
	\newcommand\sharefont{\fontfamily{typo3share}\selectfont}

	\begin{document}

	We chose to distribute licenses as they support the vision and
	mission of the TYPO3 project:

	"{\sharefont Inspiring People to \textbf{\emph{Share}}}" and
	"Jointly Innovate Excellent Free Software Enabling People to
	Communicate"

	\end{document}

and compile it:

.. code-block:: bash

	$ pdflatex test-font

When you open generated file ``test-font.pdf``, you should see the Share font used locally:

|share_font|


LaTeX template
~~~~~~~~~~~~~~

The LaTeX template is defined in file ``conf.py``:

.. code-block:: python

	# Grouping the document tree into LaTeX files. List of tuples
	# (source start file, target name, title, author, documentclass [howto/manual]).
	latex_documents = [
	    ('Index', 'myext.tex', u'My Extension Documentation',
	     u'Xavier Perseguers', 'manual'),
	]

In this example, the document class within ``conf.py`` is ``manual`` (last tupple of ``latex_documents``). This means
that after Sphinx has automatically added the prefix ``sphinx`` during compilation, the actual document class as seen by
LaTeX is ``sphinxmanual``:

.. code-block:: latex
	:linenos:

	% Generated by Sphinx.
	\def\sphinxdocclass{report}
	\documentclass[a4paper,10pt,english]{sphinxmanual}
	\usepackage[utf8]{inputenc}
	\DeclareUnicodeCharacter{00A0}{\nobreakspace}
	\usepackage{cmap}
	\usepackage[T1]{fontenc}
	\usepackage{babel}
	\usepackage{times}
	\usepackage[Bjarne]{fncychap}
	\usepackage{longtable}
	\usepackage{sphinx}
	\usepackage{multirow}

	\title{My Extension Documentation}
	\date{2013-06-30 22:25}
	\release{1.0.0}
	\author{Xavier Perseguers}

Sphinx provides two document classes:

- ``manual`` that is, ``sphinxmanual``, extending the real LaTeX document class ``report`` (by default two-side with full title page);

- ``howto`` that is, ``sphinxhowto``, extending the real LaTeX document class ``article`` (by default one-side).

Both class files (``sphinxmanual.cls`` and ``sphinxhowto.cls``) are copied to directory ``build/latex/`` during rendering.

After playing with the various options to customize the rendering, the outcome is that creating a custom document class is not the best option as most of the settings are then overridden by package ``sphinx`` on line 12 in code above. This package (file ``sphinx.sty``) is copied as well to directory ``build/latex/``.

LaTeX preamble
~~~~~~~~~~~~~~

Additional commands may be added as preamble in the generated LaTeX file. This is easily done by editing file ``conf.py``:

.. code-block:: python

	f = open('latex-styling.tex', 'r+');
	PREAMBLE = f.read();

	latex_elements = {
	    # The paper size ('letterpaper' or 'a4paper').
	    #'papersize': 'a4paper',

	    # The font size ('10pt', '11pt' or '12pt').
	    #'pointsize': '10pt',

	    # Additional stuff for the LaTeX preamble.
	    'preamble': PREAMBLE
	}

This will copy the contents of file ``latex-styling.tex`` (in same directory as ``conf.py``) to the generated LaTeX
document. For instance, if ``latex-styling.tex`` reads:

.. code-block:: latex

	% My personal "bold" command
	\newcommand{\mycommand}[1]{\textbf{#1}}

the generated LaTeX document becomes:

.. code-block:: latex

	% Generated by Sphinx.
	\def\sphinxdocclass{report}
	\documentclass[a4paper,10pt,english]{sphinxmanual}
	% snip (packages)
	% My personal "bold" command
	\newcommand{\mycommand}[1]{\textbf{#1}}

	\title{My Extension Documentation}
	\date{2013-06-30 22:25}
	\release{1.0.0}
	\author{Xavier Perseguers}

Other options
~~~~~~~~~~~~~

The configuration file ``conf.py`` lets you further tune the rendering with LaTeX. Please consult http://sphinx-doc.org/config.html#options-for-latex-output for further instructions.

TYPO3 template
~~~~~~~~~~~~~~

We want to stick as much as possible to default rendering, to avoid having to change the LaTeX code generation from Sphinx. As such, we choose to include a custom package ``typo3`` (file ``typo3.sty``) that will override some settings of package ``sphinx``. To include it automatically, we simply use the ``preamble`` option of ``conf.py``:

.. code-block:: python

	latex_elements = {
	    # Additional stuff for the LaTeX preamble.
	    'preamble': '\\usepackage{typo3}'
	}

The package ``typo3`` is available from repository RestTools, within directory ``RestTools/latex/`` and is automatically copied to the build directory when using this extension. Alternatively, you may want to register it globally within ``TEXMF`` if you plan to generate PDF from the command line solely.
