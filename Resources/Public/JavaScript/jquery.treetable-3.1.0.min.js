/*
 * jQuery treetable Plugin 3.1.0
 * http://ludo.cubicphuse.nl/jquery-treetable
 *
 * Copyright 2013, Ludo van den Boom
 * Dual licensed under the MIT or GPL Version 2 licenses.
 */
(function(){var e,t,n,r;e=jQuery;t=function(){function t(t,n,r){var i;this.row=t;this.tree=n;this.settings=r;this.id=this.row.data(this.settings.nodeIdAttr);i=this.row.data(this.settings.parentIdAttr);if(i!=null&&i!==""){this.parentId=i}this.treeCell=e(this.row.children(this.settings.columnElType)[this.settings.column]);this.expander=e(this.settings.expanderTemplate);this.indenter=e(this.settings.indenterTemplate);this.children=[];this.initialized=false;this.treeCell.prepend(this.indenter)}t.prototype.addChild=function(e){return this.children.push(e)};t.prototype.ancestors=function(){var e,t;t=this;e=[];while(t=t.parentNode()){e.push(t)}return e};t.prototype.collapse=function(){if(this.collapsed()){return this}this.row.removeClass("expanded").addClass("collapsed");this._hideChildren();this.expander.attr("title",this.settings.stringExpand);if(this.initialized&&this.settings.onNodeCollapse!=null){this.settings.onNodeCollapse.apply(this)}return this};t.prototype.collapsed=function(){return this.row.hasClass("collapsed")};t.prototype.expand=function(){if(this.expanded()){return this}this.row.removeClass("collapsed").addClass("expanded");if(this.initialized&&this.settings.onNodeExpand!=null){this.settings.onNodeExpand.apply(this)}if(e(this.row).is(":visible")){this._showChildren()}this.expander.attr("title",this.settings.stringCollapse);return this};t.prototype.expanded=function(){return this.row.hasClass("expanded")};t.prototype.hide=function(){this._hideChildren();this.row.hide();return this};t.prototype.isBranchNode=function(){if(this.children.length>0||this.row.data(this.settings.branchAttr)===true){return true}else{return false}};t.prototype.updateBranchLeafClass=function(){this.row.removeClass("branch");this.row.removeClass("leaf");this.row.addClass(this.isBranchNode()?"branch":"leaf")};t.prototype.level=function(){return this.ancestors().length};t.prototype.parentNode=function(){if(this.parentId!=null){return this.tree[this.parentId]}else{return null}};t.prototype.removeChild=function(t){var n=e.inArray(t,this.children);return this.children.splice(n,1)};t.prototype.render=function(){var t,n=this.settings,r;if(n.expandable===true&&this.isBranchNode()){t=function(t){e(this).parents("table").treetable("node",e(this).parents("tr").data(n.nodeIdAttr)).toggle();return t.preventDefault()};this.indenter.html(this.expander);r=n.clickableNodeNames===true?this.treeCell:this.expander;r.off("click.treetable").on("click.treetable",t);r.off("keydown.treetable").on("keydown.treetable",function(e){if(e.keyCode==13){t.apply(this,[e])}})}this.indenter[0].style.paddingLeft=""+this.level()*n.indent+"px";return this};t.prototype.reveal=function(){if(this.parentId!=null){this.parentNode().reveal()}return this.expand()};t.prototype.setParent=function(e){if(this.parentId!=null){this.tree[this.parentId].removeChild(this)}this.parentId=e.id;this.row.data(this.settings.parentIdAttr,e.id);return e.addChild(this)};t.prototype.show=function(){if(!this.initialized){this._initialize()}this.row.show();if(this.expanded()){this._showChildren()}return this};t.prototype.toggle=function(){if(this.expanded()){this.collapse()}else{this.expand()}return this};t.prototype._hideChildren=function(){var e,t,n,r,i;r=this.children;i=[];for(t=0,n=r.length;t<n;t++){e=r[t];i.push(e.hide())}return i};t.prototype._initialize=function(){var e=this.settings;this.render();if(e.expandable===true&&e.initialState==="collapsed"){this.collapse()}else{this.expand()}if(e.onNodeInitialized!=null){e.onNodeInitialized.apply(this)}return this.initialized=true};t.prototype._showChildren=function(){var e,t,n,r,i;r=this.children;i=[];for(t=0,n=r.length;t<n;t++){e=r[t];i.push(e.show())}return i};return t}();n=function(){function n(e,t){this.table=e;this.settings=t;this.tree={};this.nodes=[];this.roots=[]}n.prototype.collapseAll=function(){var e,t,n,r,i;r=this.nodes;i=[];for(t=0,n=r.length;t<n;t++){e=r[t];i.push(e.collapse())}return i};n.prototype.expandAll=function(){var e,t,n,r,i;r=this.nodes;i=[];for(t=0,n=r.length;t<n;t++){e=r[t];i.push(e.expand())}return i};n.prototype.findLastNode=function(e){if(e.children.length>0){return this.findLastNode(e.children[e.children.length-1])}else{return e}};n.prototype.loadRows=function(n){var r,i,s;if(n!=null){for(s=0;s<n.length;s++){i=e(n[s]);if(i.data(this.settings.nodeIdAttr)!=null){r=new t(i,this.tree,this.settings);this.nodes.push(r);this.tree[r.id]=r;if(r.parentId!=null){this.tree[r.parentId].addChild(r)}else{this.roots.push(r)}}}}for(s=0;s<this.nodes.length;s++){r=this.nodes[s].updateBranchLeafClass()}return this};n.prototype.move=function(t,n){var r=t.parentNode();if(t!==n&&n.id!==t.parentId&&e.inArray(t,n.ancestors())===-1){t.setParent(n);this._moveRows(t,n);if(t.parentNode().children.length===1){t.parentNode().render()}}if(r){r.updateBranchLeafClass()}if(t.parentNode()){t.parentNode().updateBranchLeafClass()}t.updateBranchLeafClass();return this};n.prototype.removeNode=function(t){this.unloadBranch(t);t.row.remove();delete this.tree[t.id];this.nodes.splice(e.inArray(t,this.nodes),1)};n.prototype.render=function(){var e,t,n,r;r=this.roots;for(t=0,n=r.length;t<n;t++){e=r[t];e.show()}return this};n.prototype.sortBranch=function(e,t){e.children.sort(t);this._sortChildRows(e);return this};n.prototype.unloadBranch=function(e){var t,n;for(n=0;n<e.children.length;n++){this.removeNode(e.children[n])}e.children=[];e.updateBranchLeafClass();return this};n.prototype._moveRows=function(e,t){var n=e.children,r;e.row.insertAfter(t.row);e.render();for(r=n.length-1;r>=0;r--){this._moveRows(n[r],e)}};n.prototype._sortChildRows=function(e){return this._moveRows(e,e)};return n}();r={init:function(t,r){var i;i=e.extend({branchAttr:"ttBranch",clickableNodeNames:false,column:0,columnElType:"td",expandable:false,expanderTemplate:"<a href='#'>&nbsp;</a>",indent:19,indenterTemplate:"<span class='indenter'></span>",initialState:"collapsed",nodeIdAttr:"ttId",parentIdAttr:"ttParentId",stringExpand:"Expand",stringCollapse:"Collapse",onInitialized:null,onNodeCollapse:null,onNodeExpand:null,onNodeInitialized:null},t);return this.each(function(){var t=e(this),s;if(r||t.data("treetable")===undefined){s=new n(this,i);s.loadRows(this.rows).render();t.addClass("treetable").data("treetable",s);if(i.onInitialized!=null){i.onInitialized.apply(s)}}return t})},destroy:function(){return this.each(function(){return e(this).removeData("treetable").removeClass("treetable")})},collapseAll:function(){this.data("treetable").collapseAll();return this},collapseNode:function(e){var t=this.data("treetable").tree[e];if(t){t.collapse()}else{throw new Error("Unknown node '"+e+"'")}return this},expandAll:function(){this.data("treetable").expandAll();return this},expandNode:function(e){var t=this.data("treetable").tree[e];if(t){if(!t.initialized){t._initialize()}t.expand()}else{throw new Error("Unknown node '"+e+"'")}return this},loadBranch:function(t,n){var r=this.data("treetable").settings,i=this.data("treetable").tree;n=e(n);if(t==null){this.append(n)}else{var s=this.data("treetable").findLastNode(t);n.insertAfter(s.row)}this.data("treetable").loadRows(n);n.filter("tr").each(function(){i[e(this).data(r.nodeIdAttr)].show()});if(t!=null){t.render().expand()}return this},move:function(e,t){var n,r;r=this.data("treetable").tree[e];n=this.data("treetable").tree[t];this.data("treetable").move(r,n);return this},node:function(e){return this.data("treetable").tree[e]},removeNode:function(e){var t=this.data("treetable").tree[e];if(t){this.data("treetable").removeNode(t)}else{throw new Error("Unknown node '"+e+"'")}return this},reveal:function(e){var t=this.data("treetable").tree[e];if(t){t.reveal()}else{throw new Error("Unknown node '"+e+"'")}return this},sortBranch:function(t,n){var r=this.data("treetable").settings,i,s;n=n||r.column;s=n;if(e.isNumeric(n)){s=function(t,r){var i,s,o;i=function(t){var r=t.row.find("td:eq("+n+")").text();return e.trim(r).toUpperCase()};s=i(t);o=i(r);if(s<o)return-1;if(s>o)return 1;return 0}}this.data("treetable").sortBranch(t,s);return this},unloadBranch:function(e){this.data("treetable").unloadBranch(e);return this}};e.fn.treetable=function(t){if(r[t]){return r[t].apply(this,Array.prototype.slice.call(arguments,1))}else if(typeof t==="object"||!t){return r.init.apply(this,arguments)}else{return e.error("Method "+t+" does not exist on jQuery.treetable")}};this.TreeTable||(this.TreeTable={});this.TreeTable.Node=t;this.TreeTable.Tree=n}).call(this)